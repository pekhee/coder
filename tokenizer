#!/usr/bin/env ruby
require "json"

OUTPUT = ARGV.pop
INPUT = ARGV.pop

SPLIT_ON = " ".freeze

class Page
  attr_accessor :path, :data, :lines

  def initialize path, data
    self.path = path
    self.data = data
    self.lines = parse_page
  end

  def to_h
    { type: "Page", path: path, page: data, lines: lines.map(&:to_h) }
  end

  private

  def parse_page
    data.each_with_index.to_a.map { |l| Line.new self, l[1], l[0] }
  end
end

class Line
  attr_accessor :page, :number, :data, :words

  def initialize page, number, data
    self.page = page
    self.number = number
    self.data = data
    self.words = parse_line
  end

  def to_h
    { type: "Line", number: number, line: data, words: words.map(&:to_h) }
  end

  private

  def parse_line
    return [] if data.nil?
    data.split(SPLIT_ON).each_with_index.to_a.map { |l| Word.new self, l[0], l[1] }
  end
end

Word = Struct.new :line, :number, :word do
  def to_h
    { type: "Word", number: number, word: word }
  end
end

data = File.readlines INPUT
page = Page.new INPUT, data

File.write OUTPUT, JSON.generate(page.to_h)
